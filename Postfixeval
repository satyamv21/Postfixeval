#include<iostream>
#include<cmath>
#include<stack>
using namespace std;
float operation(int,int,char);
float ScanNum(char);
float isOperator(char);
int isOperand(char);
float scanNum(char ch)
{
int value;
value=ch;
return float(value-'0');
}
float isOperator(char ch)
{
if(ch=='+'|| ch=='-'|| ch=='*'|| ch=='/'|| ch=='^')
return 1;
return -1;
}
int isOperand(char ch)
{
if(ch>='0'&&ch<='9')
return 1;
return -1;
}
float operation(int a,int b,char op)
{
float INT_MIN;
if(op=='+')
return b+a;
else if(op=='-')
return b-a;
else if(op=='*')
return b*a;
else if(op=='/')
return b/a;
else if(op=='^')
return pow(b,a);
else
return INT_MIN;
}
float postfixEval(string postfix)
{
int a,b;
stack<float>stk;
string::iterator it;
for(it=postfix.begin();it!=postfix.end();it++)
{
if(isOperator(*it)!=-1)
{
a=stk.top();
stk.pop();
b=stk.top();
stk.pop();
stk.push(operation(a,b,*it));
}
else if(isOperand(*it)>0)
{
stk.push(scanNum(*it));
}
}
return stk.top();
}
int main()
{
char postfix[10];;
cout<<"Enter postfix expression:\n";
cin>>postfix;
cout<<"\n the result is:"<<postfixEval(postfix);
}
